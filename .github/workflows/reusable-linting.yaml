on:
  workflow_call:
    inputs:
      # Set to a space separated list of directories where yamls should searched
      yamldirs:
        required: false
        type: string
        default: "."

      # Set to "false" for repositories that are not golang applications
      is-go:
        required: false
        type: boolean
        default: true
      timeout:
        required: false
        type: string
        default: "10m"

jobs:
  golangci_lint:
    runs-on: ubuntu-latest
    if: ${{ inputs.is-go }}
    steps:
      - uses: actions/checkout@v4
      - name: golangci-lint
        env:
          GOLANGCILINT_VERSION: latest-alpine
        shell: bash
        run: docker run -v $PWD:/work -w /work golangci/golangci-lint:${GOLANGCILINT_VERSION} golangci-lint --timeout=${{ inputs.timeout }} run

  hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: hadolint
        env:
          HADOLINT_VERSION: 2.12.0-alpine
        shell: bash
        run: find . -path "./examples" -prune -o -name "Dockerfile.*" -print | xargs -r -n1 docker run -v "$PWD":/work -w /work "hadolint/hadolint:${HADOLINT_VERSION}" hadolint

  renovate-validator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: renovate-validate
        env:
          RENOVATE_VERSION: "35"
        shell: bash
        run: docker run -v "$PWD":/work -w /work renovate/renovate renovate-config-validator 

  shellcheck-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: shellcheck-lint
        env:
          SHELLCHECK_VERSION: v0.9.0
        shell: bash
        run: find . -path "./examples" -prune -o -name "*.sh" -print | xargs -r -n1 docker run -v "$PWD":/work -w /work "koalaman/shellcheck-alpine:${SHELLCHECK_VERSION}" shellcheck

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: yamllint
        shell: bash
        run: find ${{ inputs.yamldirs }} -path "./examples" -prune -o -name "*.yml" -or -name "*.yaml" -print  | xargs -r -n1 docker run -v "$PWD":/work -w /work cytopia/yamllint
